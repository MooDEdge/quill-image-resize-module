(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["ImageResize"] = factory();
	else
		root["ImageResize"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaseModule; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BaseModule = function BaseModule(resizer) {
    _classCallCheck(this, BaseModule);

    this.onCreate = function () {};

    this.onDestroy = function () {};

    this.onUpdate = function () {};

    this.overlay = resizer.overlay;
    this.img = resizer.img;
    this.options = resizer.options;
    this.requestUpdate = resizer.onUpdate;
}
/*
    requestUpdate (passed in by the library during construction, above) can be used to let the library know that
    you've changed something about the image that would require re-calculating the overlay (and all of its child
    elements)
     For example, if you add a margin to the element, you'll want to call this or else all the controls will be
    misaligned on-screen.
 */

/*
    onCreate will be called when the element is clicked on
     If the module has any user controls, it should create any containers that it'll need here.
    The overlay has absolute positioning, and will be automatically repositioned and resized as needed, so you can
    use your own absolute positioning and the 'top', 'right', etc. styles to be positioned relative to the element
    on-screen.
 */


/*
    onDestroy will be called when the element is de-selected, or when this module otherwise needs to tidy up.
     If you created any DOM elements in onCreate, please remove them from the DOM and destroy them here.
 */


/*
    onUpdate will be called any time that the element is changed (e.g. resized, aligned, etc.)
     This frequently happens during resize dragging, so keep computations light while here to ensure a smooth
    user experience.
 */
;

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
    modules: ['DisplaySize', 'Toolbar', 'Resize'],
    overlayStyles: {
        position: 'absolute',
        boxSizing: 'border-box',
        border: '1px dashed #444'
    },
    handleStyles: {
        position: 'absolute',
        height: '12px',
        width: '12px',
        backgroundColor: 'white',
        border: '1px solid #777',
        boxSizing: 'border-box',
        opacity: '0.80'
    },
    displayStyles: {
        position: 'absolute',
        font: '12px/1.0 Arial, Helvetica, sans-serif',
        padding: '4px 8px',
        textAlign: 'center',
        backgroundColor: 'white',
        color: '#333',
        border: '1px solid #777',
        boxSizing: 'border-box',
        opacity: '0.80',
        cursor: 'default'
    },
    toolbarStyles: {
        position: 'absolute',
        top: '-12px',
        right: '0',
        left: '0',
        height: '0',
        minWidth: '100px',
        font: '12px/1.0 Arial, Helvetica, sans-serif',
        textAlign: 'center',
        color: '#333',
        boxSizing: 'border-box',
        cursor: 'default'
    },
    toolbarButtonStyles: {
        display: 'inline-block',
        width: '24px',
        height: '24px',
        background: 'white',
        border: '1px solid #999',
        verticalAlign: 'middle'
    },
    toolbarButtonSvgStyles: {
        fill: '#444',
        stroke: '#444',
        strokeWidth: '2'
    }
});

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DisplaySize; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BaseModule_js__ = __webpack_require__(0);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var DisplaySize = function (_BaseModule) {
    _inherits(DisplaySize, _BaseModule);

    function DisplaySize() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, DisplaySize);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DisplaySize.__proto__ || Object.getPrototypeOf(DisplaySize)).call.apply(_ref, [this].concat(args))), _this), _this.onCreate = function () {
            // Create the container to hold the size display
            _this.display = document.createElement('div');

            // Apply styles
            Object.assign(_this.display.style, _this.options.displayStyles);

            // Attach it
            _this.overlay.appendChild(_this.display);
        }, _this.onDestroy = function () {}, _this.onUpdate = function () {
            if (!_this.display || !_this.img) {
                return;
            }

            var size = _this.getCurrentSize();
            _this.display.innerHTML = size.join(' &times; ');
            if (size[0] > 120 && size[1] > 30) {
                // position on top of image
                Object.assign(_this.display.style, {
                    right: '4px',
                    bottom: '4px',
                    left: 'auto'
                });
            } else if (_this.img.style.float == 'right') {
                // position off bottom left
                var dispRect = _this.display.getBoundingClientRect();
                Object.assign(_this.display.style, {
                    right: 'auto',
                    bottom: '-' + (dispRect.height + 4) + 'px',
                    left: '-' + (dispRect.width + 4) + 'px'
                });
            } else {
                // position off bottom right
                var _dispRect = _this.display.getBoundingClientRect();
                Object.assign(_this.display.style, {
                    right: '-' + (_dispRect.width + 4) + 'px',
                    bottom: '-' + (_dispRect.height + 4) + 'px',
                    left: 'auto'
                });
            }
        }, _this.getCurrentSize = function () {
            return [_this.img.width, Math.round(_this.img.width / _this.img.naturalWidth * _this.img.naturalHeight)];
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    return DisplaySize;
}(__WEBPACK_IMPORTED_MODULE_0__BaseModule_js__["a" /* BaseModule */]);

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Resize; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BaseModule_js__ = __webpack_require__(0);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var Resize = function (_BaseModule) {
    _inherits(Resize, _BaseModule);

    function Resize() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Resize);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Resize.__proto__ || Object.getPrototypeOf(Resize)).call.apply(_ref, [this].concat(args))), _this), _this.onCreate = function () {
            // track resize handles
            _this.boxes = [];

            // add 4 resize handles
            _this.addBox('nwse-resize'); // top left
            _this.addBox('nesw-resize'); // top right
            _this.addBox('nwse-resize'); // bottom right
            _this.addBox('nesw-resize'); // bottom left

            _this.positionBoxes();
        }, _this.onDestroy = function () {
            // reset drag handle cursors
            _this.setCursor('');
        }, _this.positionBoxes = function () {
            var handleXOffset = -parseFloat(_this.options.handleStyles.width) / 2 + 'px';
            var handleYOffset = -parseFloat(_this.options.handleStyles.height) / 2 + 'px';

            // set the top and left for each drag handle
            [{ left: handleXOffset, top: handleYOffset }, // top left
            { right: handleXOffset, top: handleYOffset }, // top right
            { right: handleXOffset, bottom: handleYOffset }, // bottom right
            { left: handleXOffset, bottom: handleYOffset }].forEach(function (pos, idx) {
                Object.assign(_this.boxes[idx].style, pos);
            });
        }, _this.addBox = function (cursor) {
            // create div element for resize handle
            var box = document.createElement('div');

            // Star with the specified styles
            Object.assign(box.style, _this.options.handleStyles);
            box.style.cursor = cursor;

            // Set the width/height to use 'px'
            box.style.width = _this.options.handleStyles.width + 'px';
            box.style.height = _this.options.handleStyles.height + 'px';

            // listen for mousedown on each box
            box.addEventListener('mousedown', _this.handleMousedown, false);
            // add drag handle to document
            _this.overlay.appendChild(box);
            // keep track of drag handle
            _this.boxes.push(box);
        }, _this.handleMousedown = function (evt) {
            // note which box
            _this.dragBox = evt.target;
            // note starting mousedown position
            _this.dragStartX = evt.clientX;
            // store the width before the drag
            _this.preDragWidth = _this.img.width || _this.img.naturalWidth;
            // set the proper cursor everywhere
            _this.setCursor(_this.dragBox.style.cursor);
            // listen for movement and mouseup
            document.addEventListener('mousemove', _this.handleDrag, false);
            document.addEventListener('mouseup', _this.handleMouseup, false);
        }, _this.handleMouseup = function () {
            // reset cursor everywhere
            _this.setCursor('');
            // stop listening for movement and mouseup
            document.removeEventListener('mousemove', _this.handleDrag);
            document.removeEventListener('mouseup', _this.handleMouseup);
        }, _this.handleDrag = function (evt) {
            if (!_this.img) {
                // image not set yet
                return;
            }
            // update image size
            var deltaX = evt.clientX - _this.dragStartX;
            if (_this.dragBox === _this.boxes[0] || _this.dragBox === _this.boxes[3]) {
                // left-side resize handler; dragging right shrinks image
                _this.img.width = Math.round(_this.preDragWidth - deltaX);
            } else {
                // right-side resize handler; dragging right enlarges image
                _this.img.width = Math.round(_this.preDragWidth + deltaX);
            }
            _this.requestUpdate();
        }, _this.setCursor = function (value) {
            [document.body, _this.img].forEach(function (el) {
                el.style.cursor = value; // eslint-disable-line no-param-reassign
            });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    return Resize;
}(__WEBPACK_IMPORTED_MODULE_0__BaseModule_js__["a" /* BaseModule */]);

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Toolbar; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_quill_assets_icons_align_left_svg__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_quill_assets_icons_align_left_svg___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_quill_assets_icons_align_left_svg__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_quill_assets_icons_align_center_svg__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_quill_assets_icons_align_center_svg___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_quill_assets_icons_align_center_svg__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_quill_assets_icons_align_right_svg__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_quill_assets_icons_align_right_svg___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_quill_assets_icons_align_right_svg__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__BaseModule_js__ = __webpack_require__(0);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var Align = void 0,
    initialized = false;
function ensureInitialization() {

	if (initialized) return;
	var parchment = window.Quill.imports.parchment;
	Align = window.Quill.imports['formats/align'];
	var offsetAttributor = new parchment.Attributor.Attribute('nameClass', 'class', {
		scope: parchment.Scope.INLINE
	});
	window.Quill.register(offsetAttributor);
	initialized = true;
}

var Toolbar = function (_BaseModule) {
	_inherits(Toolbar, _BaseModule);

	function Toolbar() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, Toolbar);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call.apply(_ref, [this].concat(args))), _this), _this.onCreate = function () {

			ensureInitialization();

			// Setup Toolbar
			_this.toolbar = document.createElement('div');
			Object.assign(_this.toolbar.style, _this.options.toolbarStyles);
			_this.overlay.appendChild(_this.toolbar);

			// Setup Buttons
			_this._defineAlignments();
			_this._addToolbarButtons();
		}, _this.onDestroy = function () {}, _this.onUpdate = function () {
			_this.overlay.removeChild(_this.toolbar);
			_this.onCreate();
		}, _this._defineAlignments = function () {
			_this.alignments = [{
				icon: __WEBPACK_IMPORTED_MODULE_0_quill_assets_icons_align_left_svg___default.a,
				apply: function apply() {
					var line = Quill.find(_this.img).parent;
					Align.remove(line.domNode);
				},
				isApplied: function isApplied() {
					var line = Quill.find(_this.img).parent;
					return !Align.whitelist.includes(Align.value(line.domNode));
				}
			}, {
				icon: __WEBPACK_IMPORTED_MODULE_1_quill_assets_icons_align_center_svg___default.a,
				apply: function apply() {
					var line = Quill.find(_this.img).parent;
					Align.add(line.domNode, 'center');
				},
				isApplied: function isApplied() {
					var line = Quill.find(_this.img).parent;
					return Align.value(line.domNode) == 'center';
				}
			}, {
				icon: __WEBPACK_IMPORTED_MODULE_2_quill_assets_icons_align_right_svg___default.a,
				apply: function apply() {
					var line = Quill.find(_this.img).parent;
					Align.add(line.domNode, 'right');
				},
				isApplied: function isApplied() {
					var line = Quill.find(_this.img).parent;
					return Align.value(line.domNode) == 'right';
				}
			}];
		}, _this._addToolbarButtons = function () {
			var buttons = [];
			_this.alignments.forEach(function (alignment, idx) {
				var button = document.createElement('span');
				buttons.push(button);
				if (typeof alignment.icon === "function") {
					alignment.icon(button).then(function () {
						Object.assign(button.children[0].style, _this.options.toolbarButtonSvgStyles);
					});
				} else {
					button.innerHTML = alignment.icon;
					Object.assign(button.children[0].style, _this.options.toolbarButtonSvgStyles);
				}
				button.addEventListener('click', function () {
					// deselect all buttons
					buttons.forEach(function (button) {
						return button.style.filter = '';
					});
					if (alignment.isApplied()) {
						// If applied, unapply
						var line = Quill.find(_this.img).parent;
						Align.remove(line.domNode);
					} else {
						// otherwise, select button and apply
						_this._selectButton(button);
						alignment.apply();
					}
					// image may change position; redraw drag handles
					_this.requestUpdate();
				});
				Object.assign(button.style, _this.options.toolbarButtonStyles);
				if (idx > 0) {
					button.style.borderLeftWidth = '0';
				}
				if (alignment.isApplied()) {
					// select button if previously applied
					_this._selectButton(button);
				}
				_this.toolbar.appendChild(button);
			});
		}, _this._selectButton = function (button) {
			button.style.filter = 'invert(20%)';
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	// The toolbar and its children will be destroyed when the overlay is removed


	return Toolbar;
}(__WEBPACK_IMPORTED_MODULE_3__BaseModule_js__["a" /* BaseModule */]);

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__DefaultOptions_js__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modules_DisplaySize_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__modules_Toolbar_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__modules_Resize_js__ = __webpack_require__(3);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }






var knownModules = { DisplaySize: __WEBPACK_IMPORTED_MODULE_1__modules_DisplaySize_js__["a" /* DisplaySize */], Toolbar: __WEBPACK_IMPORTED_MODULE_2__modules_Toolbar_js__["a" /* Toolbar */], Resize: __WEBPACK_IMPORTED_MODULE_3__modules_Resize_js__["a" /* Resize */] };

function mergeDeep(a, b) {
	if (typeof a === "undefined") return b;
	if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== "object" || (typeof b === 'undefined' ? 'undefined' : _typeof(b)) !== "object") return a;
	for (var prop in b) {
		a[prop] = mergeDeep(a[prop], b[prop]);
	}
	return a;
}

/**
 * Custom module for quilljs to allow user to resize <img> elements
 * (Works on Chrome, Edge, Safari and replaces Firefox's native resize behavior)
 * @see https://quilljs.com/blog/building-a-custom-module/
 */

var ImageResize = function ImageResize(quill) {
	var _this = this;

	var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	_classCallCheck(this, ImageResize);

	this.initializeModules = function () {
		_this.removeModules();

		_this.modules = _this.moduleClasses.map(function (ModuleClass) {
			return new (knownModules[ModuleClass] || ModuleClass)(_this);
		});

		_this.modules.forEach(function (module) {
			module.onCreate();
		});

		_this.onUpdate();
	};

	this.onUpdate = function () {
		_this.repositionElements();
		_this.modules.forEach(function (module) {
			module.onUpdate();
		});
	};

	this.removeModules = function () {
		_this.modules.forEach(function (module) {
			module.onDestroy();
		});

		_this.modules = [];
	};

	this.handleClick = function (evt) {
		if (evt.target && evt.target.tagName && evt.target.tagName.toUpperCase() === 'IMG') {
			if (_this.img === evt.target) {
				// we are already focused on this image
				return;
			}
			if (_this.img) {
				// we were just focused on another image
				_this.hide();
			}
			// clicked on an image inside the editor
			_this.show(evt.target);
			evt.preventDefault(); //Prevent IE 11 drag handles appearing
		} else if (_this.img) {
			// clicked on a non image
			_this.hide();
		}
	};

	this.handleScroll = function () {
		//Hide the overlay when the editor is scrolled,
		//otherwise image is no longer correctly aligned with overlay
		_this.hide();
	};

	this.show = function (img) {
		// keep track of this img element
		_this.img = img;

		_this.showOverlay();

		_this.initializeModules();
	};

	this.showOverlay = function () {
		if (_this.overlay) {
			_this.hideOverlay();
		}

		_this.quill.setSelection(null);

		// prevent spurious text selection
		_this.setUserSelect('none');

		// listen for the image being deleted or moved
		document.addEventListener('keyup', _this.checkImage, true);
		_this.quill.root.addEventListener('input', _this.checkImage, true);

		// Create and add the overlay
		_this.overlay = document.createElement('div');
		Object.assign(_this.overlay.style, _this.options.overlayStyles);

		_this.quill.root.parentNode.appendChild(_this.overlay);

		_this.repositionElements();
	};

	this.hideOverlay = function () {
		if (!_this.overlay) {
			return;
		}

		// Remove the overlay
		_this.quill.root.parentNode.removeChild(_this.overlay);
		_this.overlay = undefined;

		// stop listening for image deletion or movement
		document.removeEventListener('keyup', _this.checkImage);
		_this.quill.root.removeEventListener('input', _this.checkImage);

		// reset user-select
		_this.setUserSelect('');
	};

	this.repositionElements = function () {
		if (!_this.overlay || !_this.img) {
			return;
		}

		// position the overlay over the image
		var parent = _this.quill.root.parentNode;
		var imgRect = _this.img.getBoundingClientRect();
		var containerRect = parent.getBoundingClientRect();

		Object.assign(_this.overlay.style, {
			left: imgRect.left - containerRect.left - 1 + parent.scrollLeft + 'px',
			top: imgRect.top - containerRect.top + parent.scrollTop + 'px',
			width: imgRect.width + 'px',
			height: imgRect.height + 'px'
		});
	};

	this.hide = function () {
		_this.hideOverlay();
		_this.removeModules();
		_this.img = undefined;
	};

	this.setUserSelect = function (value) {
		['userSelect', 'mozUserSelect', 'webkitUserSelect', 'msUserSelect'].forEach(function (prop) {
			// set on contenteditable element and <html>
			_this.quill.root.style[prop] = value;
			document.documentElement.style[prop] = value;
		});
	};

	this.checkImage = function (evt) {
		if (window.Quill) {
			if (_this.img) {
				if (evt.keyCode == 46 || evt.keyCode == 8) {
					window.Quill.find(_this.img).deleteAt(0);
				}
				_this.hide();
			}
		}
	};

	// save the quill reference and options
	this.quill = quill;

	this.options = mergeDeep(mergeDeep({}, options), __WEBPACK_IMPORTED_MODULE_0__DefaultOptions_js__["a" /* default */]);

	// disable native image resizing on firefox
	document.execCommand('enableObjectResizing', false, 'false');

	// respond to clicks inside the editor
	this.quill.root.addEventListener('click', this.handleClick, false);
	this.quill.root.addEventListener('mscontrolselect', this.handleClick, false); //IE 11 support
	this.quill.root.addEventListener('scroll', this.handleScroll, false);
	this.quill.on('text-change', this.onUpdate);

	this.quill.root.parentNode.style.position = this.quill.root.parentNode.style.position || 'relative';

	// setup modules
	this.moduleClasses = this.options.modules;

	this.modules = [];
};

/* harmony default export */ __webpack_exports__["default"] = (ImageResize);


if (window.Quill) {

	//BEGIN allow image alignment styles
	var ImageFormatAttributesList = ['alt', 'height', 'width', 'style'];

	var BaseImageFormat = window.Quill.import('formats/image');

	var ImageFormat = function (_BaseImageFormat) {
		_inherits(ImageFormat, _BaseImageFormat);

		function ImageFormat() {
			_classCallCheck(this, ImageFormat);

			return _possibleConstructorReturn(this, (ImageFormat.__proto__ || Object.getPrototypeOf(ImageFormat)).apply(this, arguments));
		}

		_createClass(ImageFormat, [{
			key: 'format',
			value: function format(name, value) {
				if (ImageFormatAttributesList.indexOf(name) > -1) {
					if (value) {
						this.domNode.setAttribute(name, value);
					} else {
						this.domNode.removeAttribute(name);
					}
				} else {
					_get(ImageFormat.prototype.__proto__ || Object.getPrototypeOf(ImageFormat.prototype), 'format', this).call(this, name, value);
				}
			}
		}], [{
			key: 'formats',
			value: function formats(domNode) {
				return ImageFormatAttributesList.reduce(function (formats, attribute) {
					if (domNode.hasAttribute(attribute)) {
						formats[attribute] = domNode.getAttribute(attribute);
					}
					return formats;
				}, {});
			}
		}]);

		return ImageFormat;
	}(BaseImageFormat);

	window.Quill.register(ImageFormat, true);
	//END allow image alignment styles


	//Add support for IE 11
	if (typeof Object.assign != 'function') {
		Object.assign = function (target) {
			'use strict';

			if (target == null) {
				throw new TypeError('Cannot convert undefined or null to object');
			}

			target = Object(target);
			for (var index = 1; index < arguments.length; index++) {
				var source = arguments[index];
				if (source != null) {
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key];
						}
					}
				}
			}
			return target;
		};
	}

	window.Quill.register('modules/imageResize', ImageResize);
}

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\">\n  <line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line>\n  <line class=\"ql-stroke\" x1=\"14\" x2=\"4\" y1=\"14\" y2=\"14\"></line>\n  <line class=\"ql-stroke\" x1=\"12\" x2=\"6\" y1=\"4\" y2=\"4\"></line>\n</svg>"

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\">\n  <line class=\"ql-stroke\" x1=\"3\" x2=\"15\" y1=\"9\" y2=\"9\"></line>\n  <line class=\"ql-stroke\" x1=\"3\" x2=\"13\" y1=\"14\" y2=\"14\"></line>\n  <line class=\"ql-stroke\" x1=\"3\" x2=\"9\" y1=\"4\" y2=\"4\"></line>\n</svg>"

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\">\n  <line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line>\n  <line class=\"ql-stroke\" x1=\"15\" x2=\"5\" y1=\"14\" y2=\"14\"></line>\n  <line class=\"ql-stroke\" x1=\"15\" x2=\"9\" y1=\"4\" y2=\"4\"></line>\n</svg>"

/***/ })
/******/ ]);
});